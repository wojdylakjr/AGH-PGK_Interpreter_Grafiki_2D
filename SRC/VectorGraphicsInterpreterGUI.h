#ifndef __VectorGraphicsInterpreterGUI__
#define __VectorGraphicsInterpreterGUI__

/**
@file
Subclass of GUI, which is generated by wxFormBuilder.
*/

#include "GUI.h"

//// end generated include

#include <wx/dc.h>
#include <wx/dcclient.h>
#include <wx/dcbuffer.h>
#include <vector>


/** Implementing GUI */
class VectorGraphicsInterpreterGUI : public GUI
{
	protected:
		// Handlers for GUI events.
		void m_workspaceOnMotion( wxMouseEvent& event );
		void m_workspaceOnUpdateUI( wxUpdateUIEvent& event );
		void m_consoleOnTextEnter( wxCommandEvent& event );
	public:
		/** Constructor */
		VectorGraphicsInterpreterGUI( wxWindow* parent );
	//// end generated class members



	private:
		/** vector of existing commands */
		std::vector<std::string> m_commands = { "range", "background", "line", "rectangle",
											 "circle", "ellipse", "arc", "fill", "delete",
											 "move", "rotate", "show", "clear", "write",
											 "read", "save" };

		/** test string to be printed when command is inserted */
		std::string m_testCommand = "cvnbcvbcbv";

		/** current x position on workspace */
		double m_currentX;
		/** current y position on workspace */
		double m_currentY;
		/** bitmap used in order to save to file */
		wxBitmap m_picture;

		/** console commands */
		void commandRange(std::string instructions);
		void commandBackground(std::string instructions);
		void commandLine(std::string instructions);
		void commandRectangle(std::string instructions);
		void commandCircle(std::string instructions);
		void commandEllipse(std::string instructions);
		void commandArc(std::string instructions);
		void commandFill(std::string instructions);
		void commandDelete(std::string instructions);
		void commandMove(std::string instructions);
		void commandRotate(std::string instructions);
		void commandShow(std::string instructions);
		void commandClear(std::string instructions);
		void commandWrite(std::string instructions);
		void commandRead(std::string instructions);
		void commandSave(std::string instructions);

	public:
		/**
		 * method painting workspace
		 */
		void Repaint();























};

#endif // __VectorGraphicsInterpreterGUI__
